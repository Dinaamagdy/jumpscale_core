#! /usr/bin/env python3

from js9 import j

import os
os.environ["LC_ALL"] = 'en_US.UTF-8'

print(j.do.mascot)


#!/usr/bin/env jspython
import os
import sys
# import click

j.application.start("config")


def _init_action():
    if "me" not in j.application.config:
        j.application.config["me"] = {}

    if "fullname" not in j.application.config["me"]:
        j.application.config["me"]["fullname"] = input('Your Full Name: ')
        j.core.state.configSave()
    if "loginname" not in j.application.config["me"]:
        j.application.config["me"]["loginname"] = input('Your Loginname: ')
        j.core.state.configSave()
    if "email" not in j.application.config["me"]:
        j.application.config["me"]["email"] = input('Your Email: ')
        j.core.state.configSave()

    # j.do._.loadSSHAgent(createkeys=False, keyname=username)
    os.system('git config --global user.name "%s"' % j.application.config["me"]["loginname"])
    os.system('git config --global user.email "%s"' % j.application.config["me"]["email"])
    # print('Please logout and relogin for your ssh keys to be loaded')
    # sys.exit(0)


_init_action()

choices = j.tools.console.askChoiceMultiple(["zerotier", "packetnet", "ovh", "zerohub"])


c = j.core.state.config

if "ovh" not in c:
    c["ovh"] = {}
    c["ovh"]["appkey"] = ""
    c["ovh"]["appsecret"] = ""
    c["ovh"]["consumerkey"] = ""
    c["ovh"]["enable"] = False

if "zerotier" not in c:
    c["zerotier"] = {}
    c["zerotier"]["networkid"] = ""
    c["zerotier"]["apitoken"] = ""
    c["zerotier"]["enable"] = False

if "packetnet" not in c:
    c["packetnet"] = {}
    c["packetnet"]["apitoken"] = ""
    c["packetnet"]["sshkey"] = ""
    c["packetnet"]["enable"] = False

if "zerohub" not in c:
    c["zerohub"] = {}

# choices = ["ovh", "zerotier", "packetnet", "zerohub"]
for key0 in choices:
    for key, val in c[key0].items():
        if key == "enable":
            continue
        if val is None or val.strip() is "":
            c[key0][key] = j.tools.console.askString("Please specify %s:%s" % (key0, key))

c["ovh"]["endpoint"] = "soyoustart-eu"
c["ovh"]["enable"] = True
c["zerohub"]["bootstrapipxe"] = 'https://bootstrap.gig.tech/ipxe/master/'
c["zerotier"]["enable"] = True
c["redis"]["unixsocket"] = "/tmp/redis.sock"
# c["packetnet"]["enable"] = True

if "zerohub" in choices:
    rel = j.tools.console.askChoice(["master", "v1.1.0-alpha-3"], "specify release for zero-os")
    c["zerohub"]["bootstrapipxe"] = 'https://bootstrap.gig.tech/ipxe/%s/' % rel


j.core.state.configSave()

destpath = j.sal.fs.joinPaths(j.dirs.VARDIR, "private", "jumpscale9.toml")
if not j.sal.fs.exists(destpath):
    j.sal.fs.copyFile('%s/jumpscale9.toml' % j.dirs.CFGDIR, destpath)
